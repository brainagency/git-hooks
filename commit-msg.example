#!/usr/bin/env ruby

require_relative './.env'
require_relative './core/git_hooks'

#=================================================================================================
# Checking commit message text and its format
#=================================================================================================
#
# In order to:
#   * make commit messages more standartized
#   * make commit message to tell what this particular commit provides
#   * make commit message more convenient for the other developers
# the following rules will be applied:
#   * main line MUST to not contain issue number.
#     Mostly issue number is useful for the tickets systems, CI systems and others, but not for
#     developers. Actually issue number takes a lot of space, which is not so big, to write
#     meaningful commit description, because mostly everywhere git shows only this first line.
#   * main line MUST has length not more than 50 characters.
#     Of course you can write more, but only 50 characters will be showen, for example, in the
#     bitbucket and other systems.
#   * additional lines MUST has issue number OR `[no-issue]` label
#     In order to allow specialized systems to link commits and issues. If you do not want that,
#     just add `[no-issue]` label.
#   * additional lines MUST has more detailed description about what this commit carries inside
#     For example: what was the problem and what is a solution, what has been improved and so on.

file_path = ARGV[0]
raw_commit_message = File.read(file_path)

commit = Commit.new(raw_message: raw_commit_message)

# Check a first line of the commit message.
# Rule:
# - there is must be no issue numbers. Use additional lines for that.
rule = CommitMessageRules::MessageMainLineShouldNotHaveIssueNumberRule.new(commit: commit)
CommitMessageRules::RuleRunner.run(rule: rule)

# Check a length of the main line of the commit message
# Rule:
# - a length of a main line of a commit message must to not exceed a specified value. Right now 50
rule = CommitMessageRules::MessageMainLineShouldNotExceedLengthRule.new(commit: commit)
CommitMessageRules::RuleRunner.run(rule: rule)

# Check for presence of the issue number in the rest of the commit message
# Rule:
# - each commit must has a reference to an issue in a tickets system to know why this changes exist
#   and if you go to see the issue you can find more information there what must be done
rule = CommitMessageRules::MessageDescriptionShouldHaveIssueCodeUnlessAnotherPartHasItRule.new(commit: commit)
CommitMessageRules::RuleRunner.run(rule: rule)

# Check for additional description presence in the rest of the commit message
rule = CommitMessageRules::MessageShouldHaveDescriptionUnlessItIsSkippedRule.new(commit: commit)
CommitMessageRules::RuleRunner.run(rule: rule)

rule = CommitMessageRules::MessageShouldHaveDescriptionWarningRule.new(commit: commit)
CommitMessageRules::RuleRunner.run(rule: rule)
