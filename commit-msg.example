#!/usr/bin/env ruby

require_relative './.env'
require_relative './core/git_hooks'

file_path = ARGV[0]
raw_commit_message = File.read(file_path.to_s)

commit = Commit.new(raw_message: raw_commit_message)

check_result = CommitMessageRules::DefaultCheckingProfile.check(commit: commit)

wrong_commit_msg_file_path = File.join(Constants::PROJECT_ROOT_PATH, Constants::WRONG_COMMIT_MSG_RELATIVE_PATH)

if check_result.violated?
  File.open(wrong_commit_msg_file_path, 'w+') do |wrong_commit_msg_file|
    wrong_commit_msg_file.write(raw_commit_message)
  end
  puts check_result.message
  exit(1) if check_result.exit_if_violated?
else
  begin
    File.delete(wrong_commit_msg_file_path)
  rescue
  end
end
